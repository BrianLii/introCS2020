#include<bits/stdc++.h>
#define X first
#define Y second
#define lson (root<<1)
#define rson (root<<1|1)
#define ALL(x) x.begin(),x.end()
#define CLR(x,y) memset(x,y,sizeof(x))
//#define endl '\n'
using namespace std;
typedef pair<int,int> pii;
int a[]{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x01, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xe0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xd8, 0x00, 0x00,
  0x00, 0x00, 0x01, 0xd8, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0x89, 0x00, 0x00,
  0x00, 0x00, 0x7e, 0x0c, 0x00, 0x00,
  0x00, 0x00, 0x60, 0x0c, 0x00, 0x00,
  0x00, 0x02, 0xc0, 0x04, 0x00, 0x00,
  0x00, 0x05, 0x80, 0x06, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x07, 0x00, 0x00,
  0x00, 0x01, 0x80, 0x02, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x03, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x06, 0x00, 0x00,
  0x00, 0x00, 0x70, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0x3c, 0x9a, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0x70, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00,
  0x00, 0x00, 0x04, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x07, 0xe0, 0x00, 0x00,
  0x00, 0x00, 0x06, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x06, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x02, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x02, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x06, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x06, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x02, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x06, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x02, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x02, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x06, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x02, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x06, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x06, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x03, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,};
int a2[]
{
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x80, 0x03, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x40, 0x07, 0xc1, 0x00, 0x00,
  0x00, 0x01, 0x04, 0x60, 0x00, 0x00,
  0x00, 0x01, 0x0c, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x08, 0x38, 0x00, 0x00,
  0x00, 0x00, 0x09, 0x0c, 0x00, 0x00,
  0x00, 0x00, 0x1b, 0x87, 0x00, 0x00,
  0x00, 0x00, 0x73, 0x81, 0x00, 0x00,
  0x00, 0x03, 0xe0, 0x01, 0x00, 0x00,
  0x08, 0x07, 0x00, 0x01, 0x88, 0x00,
  0x04, 0x7c, 0x0f, 0x80, 0x80, 0x00,
  0x00, 0x40, 0x07, 0x00, 0x80, 0x00,
  0x00, 0xc0, 0x06, 0x20, 0x40, 0x00,
  0x03, 0x83, 0x0c, 0x30, 0x60, 0x00,
  0x03, 0x82, 0x1c, 0x80, 0x23, 0x00,
  0x07, 0x80, 0x76, 0x80, 0x67, 0x18,
  0x0e, 0x04, 0x67, 0x40, 0xc5, 0x00,
  0x0c, 0x1c, 0x4f, 0x40, 0x1d, 0x80,
  0x08, 0x1e, 0xc7, 0xc7, 0x39, 0x80,
  0x08, 0x23, 0x84, 0xc6, 0x26, 0x80,
  0x08, 0x43, 0x01, 0x84, 0x2e, 0x80,
  0x04, 0x47, 0x01, 0x8c, 0xc0, 0xe0,
  0x06, 0x66, 0x02, 0x1f, 0x80, 0x60,
  0x06, 0x20, 0x00, 0x1d, 0x18, 0x20,
  0x06, 0x10, 0x04, 0xf8, 0x16, 0x30,
  0x02, 0x10, 0x0d, 0xe0, 0x77, 0x10,
  0x19, 0x18, 0x1d, 0xb0, 0xe3, 0x30,
  0x0d, 0x88, 0x13, 0x30, 0x82, 0x90,
  0x0d, 0xc4, 0x1e, 0xe3, 0x1f, 0xf0,
  0x0e, 0x66, 0x1a, 0xc6, 0x38, 0x60,
  0x0f, 0xf1, 0x80, 0x8c, 0xc4, 0xc0,
  0x05, 0xfd, 0x80, 0xf8, 0x8e, 0x80,
  0x06, 0x1d, 0x80, 0x21, 0x8c, 0x80,
  0x06, 0x93, 0x00, 0x01, 0x00, 0x80,
  0x03, 0x3f, 0x00, 0x03, 0x0f, 0x80,
  0x01, 0xb2, 0x00, 0x04, 0x18, 0x00,
  0x01, 0x87, 0xc0, 0x0c, 0xf8, 0x00,
  0x00, 0xc6, 0xff, 0xfb, 0xc0, 0x00,
  0x00, 0xfa, 0x22, 0x93, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xfe, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
int a3[]{
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0xfc, 0x00, 0x00,
  0x00, 0x00, 0x1f, 0xbc, 0x00, 0x00,
  0x00, 0x00, 0x38, 0x0e, 0x00, 0x00,
  0x00, 0x00, 0x70, 0x06, 0x00, 0x00,
  0x00, 0x00, 0xe0, 0x06, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x06, 0x00, 0x00,
  0x00, 0x01, 0x80, 0x0e, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x1c, 0x00, 0x00,
  0x00, 0x01, 0xc0, 0x38, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x70, 0x00, 0x00,
  0x00, 0x00, 0xe3, 0xe0, 0x00, 0x00,
  0x00, 0x00, 0x7f, 0x80, 0x08, 0x00,
  0x00, 0x00, 0x1e, 0x00, 0x3c, 0x00,
  0x00, 0x00, 0x0c, 0x00, 0x78, 0x00,
  0x00, 0x00, 0x0e, 0x00, 0x60, 0x00,
  0x00, 0x00, 0x04, 0x00, 0x60, 0x00,
  0x00, 0x00, 0x04, 0x00, 0x40, 0x00,
  0x00, 0x00, 0x0e, 0x00, 0xe0, 0x00,
  0x00, 0x00, 0x06, 0x00, 0x40, 0x00,
  0x00, 0x00, 0x04, 0x00, 0xe0, 0x00,
  0x00, 0x03, 0xff, 0xf9, 0xe0, 0x00,
  0x00, 0x03, 0x7f, 0xff, 0xc0, 0x00,
  0x00, 0x03, 0x0c, 0x06, 0x00, 0x00,
  0x00, 0x07, 0x0c, 0x00, 0x00, 0x00,
  0x00, 0x06, 0x0c, 0x00, 0x00, 0x00,
  0x00, 0x06, 0x1c, 0x00, 0x00, 0x00,
  0x00, 0x76, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x3c, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x1c, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
  0x00, 0x01, 0xe7, 0x80, 0x00, 0x00,
  0x00, 0x03, 0x81, 0xe0, 0x00, 0x00,
  0x00, 0x07, 0x00, 0xf0, 0x00, 0x00,
  0x00, 0x0e, 0x00, 0x30, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
int b[48][3];
int two(int x)
{
	if(x>>15)return ((x^((1<<16)-1))+1)*-1;
	else return x;
}
signed main()
{
	int k=-1;
	for(int i=0;i<6*48;i+=2)
	{
		if(i%6==0)cout<<endl;
		cout<<two(a[i]<<8|a[i+1])<<' ';
	}
	cout<<endl;
	for(int i=0;i<6*48;i+=2)
	{
		if(i%6==0)
		{
			k++;
		}
		b[k][(i/2)%3]=two(a[i]<<8|a[i+1]);
	}
	cout<<endl;
	cout<<endl;
	for(int i=0;i<48;i++)
	{
		for(int j=0;j<3;j++)
		{
			//16384+32*row+colum*16
			printf("do Memory.poke(16384+((x+%d)*32)+(y+%d), %d);",i,2-j,b[i][j]);
			//cout<<b[i][j]<<' ';
		}
		printf("\n");
	}
	
	
	
	cout<<endl;
	cout<<endl;
	k=-1;
	for(int i=0;i<6*48;i+=2)
	{
		if(i%6==0)cout<<endl;
		cout<<two(a[i]<<8|a[i+1])<<' ';
	}
	cout<<endl;
	for(int i=0;i<6*48;i+=2)
	{
		if(i%6==0)
		{
			k++;
		}
		b[k][(i/2)%3]=two(a2[i]<<8|a2[i+1]);
	}
	cout<<endl;
	cout<<endl;
	for(int i=0;i<48;i++)
	{
		for(int j=0;j<3;j++)
		{
			//16384+32*row+colum*16
			printf("do Memory.poke(16384+((x+%d)*32)+(y+%d), %d);",i,2-j,b[i][j]);
			//cout<<b[i][j]<<' ';
		}
		printf("\n");
	}
	
	cout<<endl;
	cout<<endl;
	k=-1;
	for(int i=0;i<6*48;i+=2)
	{
		if(i%6==0)cout<<endl;
		cout<<two(a[i]<<8|a[i+1])<<' ';
	}
	cout<<endl;
	for(int i=0;i<6*48;i+=2)
	{
		if(i%6==0)
		{
			k++;
		}
		b[k][(i/2)%3]=two(a3[i]<<8|a3[i+1]);
	}
	cout<<endl;
	cout<<endl;
	for(int i=0;i<48;i++)
	{
		for(int j=0;j<3;j++)
		{
			//16384+32*row+colum*16
			printf("do Memory.poke(16384+((x+%d)*32)+(y+%d), %d);",i,2-j,b[i][j]);
			//cout<<b[i][j]<<' ';
		}
		printf("\n");
	}
	return 0;
}

