class Block
{
    field int px,py;
    constructor Block new(int _px,int _py)
    {
        let px=_px;
        let py=_py;
        return this;
    }
    method int _px()
    {
        return px;
    }
    method int _py()
    {
        return py;
    }
    method void draw()
    {
        var int memAddress;
        let  memAddress = 16384+(px*32*16)+py;
        do Memory.poke(memAddress+0, -1);
        do Memory.poke(memAddress+32, -24571);
        do Memory.poke(memAddress+64, -1);
        do Memory.poke(memAddress+96, -22555);
        do Memory.poke(memAddress+128, -23611);
        do Memory.poke(memAddress+160, -20083);
        do Memory.poke(memAddress+192, -18403);
        do Memory.poke(memAddress+224, -17347);
        do Memory.poke(memAddress+256, -17347);
        do Memory.poke(memAddress+288, -18403);
        do Memory.poke(memAddress+320, -20083);
        do Memory.poke(memAddress+352, -23611);
        do Memory.poke(memAddress+384, -22555);
        do Memory.poke(memAddress+416, -1);
        do Memory.poke(memAddress+448, -24571);
        do Memory.poke(memAddress+480, -1);
        return;
    }
    method void clear_scrn()
    {
        var int memAddress;
        let  memAddress = 16384+(px*16*32)+py;
        do Memory.poke(memAddress+0, 0);
        do Memory.poke(memAddress+32, 0);
        do Memory.poke(memAddress+64, 0);
        do Memory.poke(memAddress+96, 0);
        do Memory.poke(memAddress+128, 0);
        do Memory.poke(memAddress+160, 0);
        do Memory.poke(memAddress+192, 0);
        do Memory.poke(memAddress+224, 0);
        do Memory.poke(memAddress+256, 0);
        do Memory.poke(memAddress+288, 0);
        do Memory.poke(memAddress+320, 0);
        do Memory.poke(memAddress+352, 0);
        do Memory.poke(memAddress+384, 0);
        do Memory.poke(memAddress+416, 0);
        do Memory.poke(memAddress+448, 0);
        do Memory.poke(memAddress+480, 0);
        return ;
    }
    method void init(int x,int y)
    {
        let px=x;
        let py=y;
        return;
    }
    method boolean valid(int x,int y)
    {
        //if(~Main.game.map.valid(x,y))
        if(Map.get_map(x,y)=1)
        {
            return false;
        }
        if(~Blocks.find_block(x,y))//!=-1
        {
            return false;
        }
        return true;
    }
    method void move(int dx,int dy)
    {
        if(valid(px+dx,py+dy))
        {
            let px=px+dx;
            let py=py+dy;
        }
        return;
    }
    method void dispose()
    {
        do Memory.deAlloc(this);
        return;
    }
}