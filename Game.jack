class Game
{
    static Player player;
    static Array player_log;
    static int key_lag;
    static int log_num;
    function void init(int stage_num)
    {
        do Stage.init(stage_num);
        do Targets.init();
        do Blocks.init();
        do Map.init();
        do Player_log.init();
        let player=Player.new(Stage._player_x(),Stage._player_y());
        let key_lag=1;
        return;
    }
    function Player _player()
    {
        return player;
    }
    function void clear_scrn()
    {
        do player.clear_scrn();
        //do Blocks.clear_scrn();
        return;
    }
    function void draw()
    {
        //do Blocks.draw();
        do player.draw();
        do Targets.draw();
        do Shade.draw();
        return;
    }
    function boolean player_move(int dx,int dy)
    {
        do Game.clear_scrn();
        do player.move(dx,dy);
        do Game.draw();
        if(Targets.remain()=0)
        {
            do Screen.clearScreen();
            do Output.printString("you win");
            do player.dispose();
            return 1;
        }
        do Sys.wait(key_lag);
        return 0;
    }
    function void play()
    {
        var char inp;
        while(true)
        {
            let inp=Keyboard.keyPressed();
            //L,U,R,D = 130~133
            if(inp=130)
            {
                if(Game.player_move(0,-1))
                {
                    return;
                }
            }
            if(inp=131)
            {
                if(Game.player_move(-1,0))
                {
                    return;
                }
            }
            if(inp=132)
            {
                if(Game.player_move(0,1))
                {
                    return;
                }
            }
            if(inp=133)
            {
                if(Game.player_move(1,0))
                {
                    return;
                }
            }
            if(inp=85)//u=undo
            {
                do Player_log.move_back();
                do Sys.wait(100);
            }
        }
        return ;
    }
}